C51 COMPILER V9.02   GSM_MODEM                                                             02/24/2017 20:32:47 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE GSM_MODEM
OBJECT MODULE PLACED IN ..\bin\gsm_modem.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\drv\gsm_modem.c BROWSE INCDIR(..\drv\offchip_drivers\include;..\drv\onch
                    -ip_drivers\include;..\app\include;..\drv) DEBUG OBJECTEXTEND PRINT(.\gsm_modem.lst) OBJECT(..\bin\gsm_modem.obj)

line level    source

   1          
   2          #include <gsm_modem.h>
   3          #include <reg52.h>
   4          #include <string.h>
   5          #include <uart.h>
   6          #include <delay.h>
   7          
   8           char *sms;
   9           
  10          char GSM_initModem(void)
  11          {          char status = 0;
  12   1      
  13   1                      init_UART();
  14   1                      status = GSM_selftest();
  15   1                      GSM_sendSMS("+91966333695", "GSM TEST SMS");
  16   1      
  17   1      
  18   1                      GSM_deleteSMS("1");
  19   1                      GSM_deleteSMS("2");
  20   1                      GSM_deleteSMS("3");
  21   1      
  22   1      
  23   1                      return status;
  24   1      
  25   1      
  26   1      }
  27          
  28          char GSM_atCommandOperation(char *command, char *replay)
  29          {                 
  30   1              char status = 0;
  31   1                
  32   1               transmit_UARTDataString(command);
  33   1                      
  34   1              delay_ms(1);
  35   1      
  36   1              if(strcmp(replay,GSM_readATCommand()) == 0)
  37   1              {
  38   2                              return 1;
  39   2              }
  40   1              else
  41   1              {
  42   2                              return 0;
  43   2              }
  44   1      
  45   1      
  46   1      
  47   1      
  48   1      }
  49          
  50          char *GSM_readATCommand(void)
  51          {
  52   1                
  53   1                
  54   1                 char cmd_buffer[20] = {0};
C51 COMPILER V9.02   GSM_MODEM                                                             02/24/2017 20:32:47 PAGE 2   

  55   1                 
  56   1                      char i=0, data_byte=0;
  57   1                       while(1)
  58   1                       {
  59   2      
  60   2                              data_byte = receive_UARTDataByte();      
  61   2                              cmd_buffer[i]  = data_byte;
  62   2                              i++;
  63   2                              if(i>20)
  64   2                              {
  65   3                                      i=0;
  66   3                              }
  67   2                              if (data_byte == '\r') break;
  68   2                              if (data_byte == '\n') break;
  69   2                              if (data_byte == '\0') break;
  70   2                              if (data_byte == '#') break;
  71   2                       }
  72   1                              if(i!=0) cmd_buffer[i-1]='\0';
  73   1      
  74   1      
  75   1                       return cmd_buffer;
  76   1              
  77   1      }
  78          
  79          char GSM_selftest(void)
  80          {
  81   1              char status = 0;
  82   1      
  83   1              status =  GSM_atCommandOperation("ATEO/r/n", "OK");
  84   1              status =  GSM_atCommandOperation("AT/r/n", "OK");
  85   1              status =  GSM_atCommandOperation("AT+CPIN?/r/n", "+CPIN:READY");
  86   1              status =  GSM_atCommandOperation("AT+CMGF=1/r/n", "OK");
  87   1                      
  88   1              return status;
  89   1      
  90   1      }
  91          
  92          char GSM_deleteSMS(char *sms_no)
  93          {
  94   1              char status = 0;
  95   1                      
  96   1              status =  GSM_atCommandOperation("AT+CMGD=","");
  97   1              status =  GSM_atCommandOperation(sms_no,"");
  98   1              status =  GSM_atCommandOperation("/r/n","OK");
  99   1      
 100   1              return status;  
 101   1      }
 102          
 103          char *GSM_readSMS(char sms_no)
 104          {
 105   1                char i=0, data_byte=0;
 106   1              
 107   1      //      if (data_byte == '\r') break;
 108   1      //              if (data_byte == '\n') break;
 109   1      //              if (data_byte == '\0') break;
 110   1      //              if (data_byte == '#') break;
 111   1      
 112   1      
 113   1                       return sms;
 114   1              
 115   1      }
*** WARNING C280 IN LINE 103 OF ..\DRV\GSM_MODEM.C: 'sms_no': unreferenced local variable
C51 COMPILER V9.02   GSM_MODEM                                                             02/24/2017 20:32:47 PAGE 3   

 116          
 117          
 118          
 119          
 120          char GSM_sendSMS(char *mobile_no, char *sms)
 121          {
 122   1              char status = 0;
 123   1              status = GSM_atCommandOperation("AT+CMGS=","");
 124   1              status = GSM_atCommandOperation(mobile_no,"");
 125   1              status = GSM_atCommandOperation("/r/n",">");
 126   1      
 127   1              status = GSM_atCommandOperation(sms,"");
 128   1              transmit_UARTDataByte(0x1A);
 129   1      
 130   1      
 131   1                              
 132   1              return status;          
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =    136    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
