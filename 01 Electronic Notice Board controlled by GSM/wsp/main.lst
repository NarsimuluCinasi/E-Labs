C51 COMPILER V9.02   MAIN                                                                  02/25/2017 02:34:36 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\bin\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\app\main.c BROWSE INCDIR(..\drv\offchip_drivers\include;..\drv\onchip_dr
                    -ivers\include;..\app\include;..\drv) DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(..\bin\main.obj)

line level    source

   1          
   2          /*Defining all Header files */
   3          
   4          #include<reg52.h>
   5          #include<lcd4bit.h>
   6          #include<delay.h>
   7          #include<adc.h>
   8          #include <uart.h>
   9          #include <gsm_modem.h>
  10          
  11          #include <motor_control.h>
  12          
  13          
  14          #define IN 1
  15          #define OUT 0
  16          
  17          
  18          
  19          /*Program in AT89S52 will starts executes from here */
  20          
  21          char opm;
  22          
  23          void main()
  24          {
  25   1              char sms_data[80] = {0};
  26   1      
  27   1              char i=0, str=0,count=0;
  28   1              init_lcd();
  29   1              init_UART();
  30   1              lcd_clear();    
  31   1      
  32   1              
  33   1                      lcd_20x4Position(1, 0);
  34   1                      print_lcd("TKR ENGINEERING COL2");
  35   1                      lcd_20x4Position(2, 0);
  36   1                      print_lcd(" ELECTRONIC NOTICE ");
  37   1      
  38   1                      
  39   1                      lcd_20x4Position(3, 0);
  40   1                      print_lcd("  BOARD USING GSM  ");
  41   1                      lcd_20x4Position(4, 0);
  42   1                      print_lcd("********************");
  43   1                      delay_ms(1000);
  44   1                      //init_GSMModem();
  45   1      
  46   1                      lcd_20x4Position(3, 0);
  47   1                      print_lcd("--------------------");
  48   1                      lcd_20x4Position(4, 0);
  49   1                      print_lcd("Initilizing GSM.....");
  50   1                      transmit_UARTDataString("AT"); delay_ms(50);
  51   1                      transmit_UARTDataByte(0X0D);
  52   1      
  53   1                      while(receive_UARTDataByte() != 'O');
  54   1                      while(receive_UARTDataByte() != 'K');
C51 COMPILER V9.02   MAIN                                                                  02/25/2017 02:34:36 PAGE 2   

  55   1              
  56   1                      lcd_20x4Position(4, 0);
  57   1                      print_lcd("MODEM AT OK ....");
  58   1      
  59   1                      transmit_UARTDataString("ATE0");
  60   1                      transmit_UARTDataByte(0X0D);
  61   1      
  62   1                      
  63   1      
  64   1                      while(receive_UARTDataByte() != 'O');
  65   1                      while(receive_UARTDataByte() != 'K');
  66   1                      lcd_20x4Position(4, 0);
  67   1                      print_lcd("MODEM ECHO OFF....");
  68   1                      lcd_20x4Position(4, 0);
  69   1                      print_lcd("Checking GSM Network");
  70   1                      delay_ms(250);
  71   1                      transmit_UARTDataString("AT+CPIN?"); delay_ms(100);transmit_UARTDataByte(0X0D);
  72   1              
  73   1                      while(receive_UARTDataByte() != 'R');
  74   1                      while(receive_UARTDataByte() != 'E');
  75   1                      while(receive_UARTDataByte() != 'A');
  76   1                      while(receive_UARTDataByte() != 'D');
  77   1                      while(receive_UARTDataByte() != 'Y');
  78   1      
  79   1                      lcd_20x4Position(4, 0);
  80   1                      print_lcd("MODEM CPIN OK ......");
  81   1      
  82   1                      transmit_UARTDataString("AT+CMGF=1");delay_ms(100);     transmit_UARTDataByte(0X0D);
  83   1                      while(receive_UARTDataByte() != 'O');
  84   1                      while(receive_UARTDataByte() != 'K');
  85   1      
  86   1                      lcd_20x4Position(4, 0);
  87   1                      print_lcd("SMS TEXTM OK ...... ");
  88   1      
  89   1      //              transmit_UARTDataString("AT+CMGS=\"+919666333695\"");  delay_ms(50);    transmit_UARTDataByte(0X0D);
  90   1      //              while(receive_UARTDataByte() != '>');
  91   1      //              transmit_UARTDataString("GSM MODULE TEST SMS");delay_ms(100);
  92   1      //              transmit_UARTDataByte(0X1A);
  93   1      //              while(receive_UARTDataByte() != 'O');
  94   1      //              while(receive_UARTDataByte() != 'K');
  95   1      //              lcd_20x4Position(4, 0);
  96   1      //              print_lcd("SMS TEST OK .....");
  97   1      //              delay_ms(100);
  98   1                      
  99   1                      lcd_20x4Position(4, 0);
 100   1                      print_lcd("LOADING INBOX.....");
 101   1                      delay_ms(500);
 102   1      //
 103   1      //              transmit_UARTDataString("AT+CMGD=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 104   1      //              while(receive_UARTDataByte() != 'O');
 105   1      //              while(receive_UARTDataByte() != 'K');
 106   1      //              transmit_UARTDataString("AT+CMGD=2");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 107   1      //              while(receive_UARTDataByte() != 'O');
 108   1      //              while(receive_UARTDataByte() != 'K');
 109   1      //              transmit_UARTDataString("AT+CMGD=3");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 110   1      //              while(receive_UARTDataByte() != 'O');
 111   1      //              while(receive_UARTDataByte() != 'K');
 112   1      //              transmit_UARTDataString("AT+CMGD=4");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 113   1      //              while(receive_UARTDataByte() != 'O');
 114   1      //              while(receive_UARTDataByte() != 'K');
 115   1      //              transmit_UARTDataString("AT+CMGD=5");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 116   1      //              while(receive_UARTDataByte() != 'O');
C51 COMPILER V9.02   MAIN                                                                  02/25/2017 02:34:36 PAGE 3   

 117   1      //              while(receive_UARTDataByte() != 'K');
 118   1      //              transmit_UARTDataString("AT+CMGD=6");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 119   1      //              while(receive_UARTDataByte() != 'O');
 120   1      //              while(receive_UARTDataByte() != 'K');
 121   1      //              transmit_UARTDataString("AT+CMGD=7");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 122   1      //              while(receive_UARTDataByte() != 'O');
 123   1      //              while(receive_UARTDataByte() != 'K');
 124   1      //              transmit_UARTDataString("AT+CMGD=8");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 125   1      //              while(receive_UARTDataByte() != 'O');
 126   1      //              while(receive_UARTDataByte() != 'K');
 127   1      //              transmit_UARTDataString("AT+CMGD=9");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 128   1      //              while(receive_UARTDataByte() != 'O');
 129   1      //              while(receive_UARTDataByte() != 'K');
 130   1      //              transmit_UARTDataString("AT+CMGD=10");  delay_ms(50);   transmit_UARTDataByte(0X0D);
 131   1      //              while(receive_UARTDataByte() != 'O');
 132   1      //              while(receive_UARTDataByte() != 'K');
 133   1      //
 134   1      //              
 135   1      //              
 136   1      //              lcd_20x4Position(4, 0);
 137   1      //              print_lcd("SMS INBOX CLEAN....");
 138   1      //              delay_ms(1000);
 139   1      
 140   1                      lcd_20x4Position(4, 0);
 141   1                      print_lcd("SEND NOTICE        ");
 142   1                      delay_ms(1000);
 143   1      
 144   1      
 145   1                      transmit_UARTDataString("AT+CMGR=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);  delay_ms(50);
 146   1      
 147   1                              lcd_clear();
 148   1      
 149   1                      while(1)
 150   1                      {
 151   2                      
 152   2                              if(RI == 1 && count <50)
 153   2                              {
 154   3                                      sms_data[count] = receive_UARTDataByte();
 155   3                                      count++;
 156   3                              }
 157   2                              sms_data[count] = '\0';
 158   2                              print_lcd(sms_data);
 159   2      
 160   2                              
 161   2                                       
 162   2      //                      transmit_UARTDataString("AT+CMGR=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);  delay_ms(50);
 163   2      //               
 164   2      //                        if()
 165   2                              
 166   2      //                      while(receive_UARTDataByte() != '+');
 167   2      //
 168   2      //                      lcd_20x4Position(4, 0); print_lcd("SEND NOTICE1       ");
 169   2      //
 170   2      //                      while(receive_UARTDataByte() != '#');
 171   2      //
 172   2      //                      lcd_20x4Position(4, 0); print_lcd("SEND NOTICE2       ");
 173   2      //                      lcd_clear();
 174   2      //                      while(1)
 175   2      //                      {
 176   2      //                              
 177   2      //                      
 178   2      //                              sms_data = receive_UARTDataByte();delay_ms(100);
C51 COMPILER V9.02   MAIN                                                                  02/25/2017 02:34:36 PAGE 4   

 179   2      //                              putc_lcd(sms_data);
 180   2      //
 181   2      //                              if (sms_data == '#') break;
 182   2      //                              if (sms_data == '\r') break;
 183   2      //                              if (sms_data == '\n') break;
 184   2      //                              if (sms_data == '\0') break;
 185   2      //                      
 186   2      //
 187   2      //
 188   2      //                      }
 189   2      
 190   2      //                      transmit_UARTDataString("AT+CMGR=2");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 191   2      //                      while(receive_UARTDataByte() != '#');
 192   2      //                      lcd_clear();
 193   2      //                      while(1)
 194   2      //                      {
 195   2      //                              sms_data = receive_UARTDataByte();
 196   2      //                              putc_lcd(sms_data);
 197   2      //                              if (sms_data == '#') break;
 198   2      //                              if (sms_data == '\r') break;
 199   2      //                              if (sms_data == '\n') break;
 200   2      //                              if (sms_data == '\0') break;
 201   2      //                      
 202   2      //
 203   2      //
 204   2      //                      }
 205   2      
 206   2      //                      transmit_UARTDataString("AT+CMGR=3");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 207   2      //                      while(receive_UARTDataByte() != '#');
 208   2      //                      lcd_clear();
 209   2      //                      while(1)
 210   2      //                      {
 211   2      //                              sms_data = receive_UARTDataByte();
 212   2      //                              putc_lcd(sms_data);
 213   2      //                              if (sms_data == '#') break;
 214   2      //                              if (sms_data == '\r') break;
 215   2      //                              if (sms_data == '\n') break;
 216   2      //                              if (sms_data == '\0') break;
 217   2      //                              
 218   2      //
 219   2      //
 220   2      //                      }
 221   2      //                      transmit_UARTDataString("AT+CMGD=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 222   2      //                              while(receive_UARTDataByte() != 'O');
 223   2      //                              while(receive_UARTDataByte() != 'K');
 224   2      //                                      transmit_UARTDataString("AT+CMGD=2");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 225   2      //                              while(receive_UARTDataByte() != 'O');
 226   2      //                              while(receive_UARTDataByte() != 'K');
 227   2      //                                      transmit_UARTDataString("AT+CMGD=3");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 228   2      //                              while(receive_UARTDataByte() != 'O');
 229   2      //                              while(receive_UARTDataByte() != 'K');
 230   2      
 231   2                      }
 232   1              
 233   1      
 234   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    486    ----
   CONSTANT SIZE    =    379    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.02   MAIN                                                                  02/25/2017 02:34:36 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      83
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
