C51 COMPILER V9.02   MAIN                                                                  02/27/2017 17:39:53 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\bin\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\app\main.c BROWSE INCDIR(..\drv\offchip_drivers\include;..\drv\onchip_dr
                    -ivers\include;..\app\include;..\drv) DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(..\bin\main.obj)

line level    source

   1          
   2          /*Defining all Header files */
   3          
   4          #include<reg52.h>
   5          #include<lcd4bit.h>
   6          #include<delay.h>
   7          #include<adc.h>
   8          #include <uart.h>
   9          #include <gsm_modem.h>
  10          #include <string.h>
  11          #include <stdio.h>
  12          
  13          #include <motor_control.h>
  14          
  15          
  16          #define IN 1
  17          #define OUT 0
  18          
  19          
  20          
  21          /*Program in AT89S52 will starts executes from here */
  22          
  23          char opm;
  24          
  25          void main()
  26          {
  27   1              char sms_data[80] = {0};
  28   1      
  29   1              char i=0, sms_byte=0,count=0, sms_status =0;
  30   1              init_lcd();
  31   1              init_UART();
  32   1              lcd_clear();
  33   1                      
  34   1              print_lcd("Initilizing GSM.....");
  35   1              transmit_UARTDataString("AT"); delay_ms(50);
  36   1              transmit_UARTDataByte(0X0D);
  37   1      
  38   1              while(receive_UARTDataByte() != 'O');
  39   1              while(receive_UARTDataByte() != 'K');
  40   1              
  41   1              lcd_clear();
  42   1              print_lcd("MODEM AT OK ....");
  43   1      
  44   1              transmit_UARTDataString("ATE0");
  45   1              transmit_UARTDataByte(0X0D);
  46   1              while(receive_UARTDataByte() != 'O');
  47   1              while(receive_UARTDataByte() != 'K');
  48   1              lcd_clear();
  49   1              print_lcd("MODEM ECHO OFF....");
  50   1      
  51   1              lcd_clear();
  52   1              print_lcd("Checking GSM Network");
  53   1              delay_ms(250);
  54   1              transmit_UARTDataString("AT+CPIN?"); delay_ms(100);transmit_UARTDataByte(0X0D);
C51 COMPILER V9.02   MAIN                                                                  02/27/2017 17:39:53 PAGE 2   

  55   1              
  56   1                      while(receive_UARTDataByte() != 'R');
  57   1                      while(receive_UARTDataByte() != 'E');
  58   1                      while(receive_UARTDataByte() != 'A');
  59   1                      while(receive_UARTDataByte() != 'D');
  60   1                      while(receive_UARTDataByte() != 'Y');
  61   1      
  62   1              lcd_clear();
  63   1                      print_lcd("MODEM CPIN OK ......");
  64   1      
  65   1                      transmit_UARTDataString("AT+CMGD=1");delay_ms(100);     transmit_UARTDataByte(0X0D);
  66   1                      while(receive_UARTDataByte() != 'O');
  67   1                      while(receive_UARTDataByte() != 'K');
  68   1      
  69   1              lcd_clear();
  70   1                      print_lcd("SMS TEXTM OK ...... ");
  71   1      
  72   1      //              transmit_UARTDataString("AT+CMGS=\"+919666333695\"");  delay_ms(50);    transmit_UARTDataByte(0X0D);
  73   1      //              while(receive_UARTDataByte() != '>');
  74   1      //              transmit_UARTDataString("GSM MODULE TEST SMS");delay_ms(100);
  75   1      //              transmit_UARTDataByte(0X1A);
  76   1      //              while(receive_UARTDataByte() != 'O');
  77   1      //              while(receive_UARTDataByte() != 'K');
  78   1      //              lcd_20x4Position(4, 0);
  79   1      //              print_lcd("SMS TEST OK .....");
  80   1      //              delay_ms(100);
  81   1      
  82   1                              transmit_UARTDataString("AT+CMGD=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);
  83   1                                      while(receive_UARTDataByte() != 'O');
  84   1                                      while(receive_UARTDataByte() != 'K');
  85   1                                      
  86   1                      
  87   1              lcd_clear();
  88   1                      print_lcd("LOADING INBOX.....");
  89   1                       
  90   1                      while(1)
  91   1                      {
  92   2                              while(RI !=0) RI =0; count =0; sms_byte =0;      sms_status =0;
  93   2      
  94   2                              while(1)
  95   2                              {
  96   3      
  97   3                                      if(RI == 1 && count == 14)
  98   3                                      {
  99   4                                              
 100   4                                              sms_status = receive_UARTDataByte();
 101   4                                              
 102   4                                                      count =0;break;
 103   4                                      }
 104   3                                      else if(RI == 1)
 105   3                                      {
 106   4                                         receive_UARTDataByte();
 107   4                                         count++;
 108   4                                      }
 109   3      
 110   3                                      if(count > 15)
 111   3                                      {
 112   4                                       count =0; break;
 113   4                                      }
 114   3                      
 115   3                              }
 116   2              
C51 COMPILER V9.02   MAIN                                                                  02/27/2017 17:39:53 PAGE 3   

 117   2                      lcd_clear();    count =0;
 118   2                      putc_lcd(sms_status);
 119   2                      delay_ms(1000);
 120   2              
 121   2                      while(RI !=0) RI =0;
 122   2      
 123   2                              transmit_UARTDataString("AT+CMGR="); transmit_UARTDataByte(sms_status); delay_ms(50);   transmit_UARTData
             -Byte(0X0D);  delay_ms(50);
 124   2                              while(1)
 125   2                              {
 126   3                                      while(RI ==0);
 127   3                                      if(RI == 1 && count > 64)
 128   3                                      {
 129   4                                              sms_byte = receive_UARTDataByte();
 130   4                                              sms_data[i] = sms_byte;
 131   4      
 132   4                                              if (sms_byte == '&') break;
 133   4      
 134   4                                               i++;  count++;
 135   4      
 136   4                                      }
 137   3                                      else if(RI == 1)
 138   3                                      {
 139   4                                         receive_UARTDataByte();
 140   4                                         count++;
 141   4                                      }
 142   3      
 143   3                                      if(count > 144)
 144   3                                      {
 145   4                                              count =0;
 146   4                                               break; 
 147   4                                      }
 148   3                                      
 149   3                              
 150   3                      
 151   3                               }
 152   2      
 153   2                              lcd_clear();
 154   2                              sms_data[i] = '\0';
 155   2                              print_lcd(sms_data);
 156   2                              count =0; i =0;
 157   2      
 158   2                              transmit_UARTDataString("AT+CMGD="); transmit_UARTDataByte(sms_status); delay_ms(20); 
 159   2                              transmit_UARTDataByte(0X0D);
 160   2                              while(receive_UARTDataByte() != 'O');
 161   2                              while(receive_UARTDataByte() != 'K');
 162   2      
 163   2                      }
 164   1              
 165   1      
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    544    ----
   CONSTANT SIZE    =    264    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      84
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.02   MAIN                                                                  02/27/2017 17:39:53 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
