C51 COMPILER V9.02   MAIN                                                                  03/01/2017 15:21:12 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\bin\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\app\main.c BROWSE INCDIR(..\drv\offchip_drivers\include;..\drv\onchip_dr
                    -ivers\include;..\app\include;..\drv) DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(..\bin\main.obj)

line level    source

   1          
   2          /*Defining all Header files */
   3          
   4          #include<reg52.h>
   5          #include<lcd4bit.h>
   6          #include<delay.h>
   7          #include<adc.h>
   8          #include <uart.h>
   9          #include <gsm_modem.h>
  10          
  11          #include <motor_control.h>
  12          
  13          
  14          #define IN 1
  15          #define OUT 0
  16          
  17          
  18          
  19          /*Program in AT89S52 will starts executes from here */
  20          
  21          char opm;
  22          
  23          void main()
  24          {
  25   1              char sms_data[80] = {0};
  26   1      
  27   1              char i=0, sms_byte=0,count=0, sms_status =0;
  28   1              init_lcd();
  29   1              init_UART();
  30   1              lcd_clear();    
  31   1      
  32   1              
  33   1                      lcd_20x4Position(1, 0);
  34   1                      print_lcd("TKR ENGINEERING COL2");
  35   1                      lcd_20x4Position(2, 0);
  36   1                      print_lcd(" ELECTRONIC NOTICE ");
  37   1      
  38   1                      
  39   1                      lcd_20x4Position(3, 0);
  40   1                      print_lcd("  BOARD USING GSM  ");
  41   1                      lcd_20x4Position(4, 0);
  42   1                      print_lcd("********************");
  43   1                      delay_ms(1000);
  44   1                      //init_GSMModem();
  45   1      
  46   1                      lcd_20x4Position(3, 0);
  47   1                      print_lcd("--------------------");
  48   1                      lcd_20x4Position(4, 0);
  49   1                      print_lcd("Initilizing GSM.....");
  50   1                      transmit_UARTDataString("AT"); delay_ms(50);
  51   1                      transmit_UARTDataByte(0X0D);
  52   1      
  53   1                      while(receive_UARTDataByte() != 'O');
  54   1                      while(receive_UARTDataByte() != 'K');
C51 COMPILER V9.02   MAIN                                                                  03/01/2017 15:21:12 PAGE 2   

  55   1              
  56   1                      lcd_20x4Position(4, 0);
  57   1                      print_lcd("MODEM AT OK ....");
  58   1      
  59   1                      transmit_UARTDataString("ATE0");
  60   1                      transmit_UARTDataByte(0X0D);
  61   1      
  62   1                      
  63   1      
  64   1                      while(receive_UARTDataByte() != 'O');
  65   1                      while(receive_UARTDataByte() != 'K');
  66   1                      lcd_20x4Position(4, 0);
  67   1                      print_lcd("MODEM ECHO OFF....");
  68   1                      lcd_20x4Position(4, 0);
  69   1                      print_lcd("Checking GSM Network");
  70   1                      delay_ms(250);
  71   1                      transmit_UARTDataString("AT+CPIN?"); delay_ms(100);transmit_UARTDataByte(0X0D);
  72   1              
  73   1                      while(receive_UARTDataByte() != 'R');
  74   1                      while(receive_UARTDataByte() != 'E');
  75   1                      while(receive_UARTDataByte() != 'A');
  76   1                      while(receive_UARTDataByte() != 'D');
  77   1                      while(receive_UARTDataByte() != 'Y');
  78   1      
  79   1                      lcd_20x4Position(4, 0);
  80   1                      print_lcd("MODEM CPIN OK ......");
  81   1      
  82   1                      transmit_UARTDataString("AT+CMGF=1");delay_ms(100);     transmit_UARTDataByte(0X0D);
  83   1                      while(receive_UARTDataByte() != 'O');
  84   1                      while(receive_UARTDataByte() != 'K');
  85   1      
  86   1                      lcd_20x4Position(4, 0);
  87   1                      print_lcd("SMS TEXTM OK ...... ");
  88   1      
  89   1                      transmit_UARTDataString("AT+CMGS=\"+919666333695\"");  delay_ms(50);    transmit_UARTDataByte(0X0D);
  90   1                      while(receive_UARTDataByte() != '>');
  91   1                      transmit_UARTDataString("GSM MODULE TEST SMS");delay_ms(100);
  92   1                      transmit_UARTDataByte(0X1A);
  93   1                      while(receive_UARTDataByte() != 'O');
  94   1                      while(receive_UARTDataByte() != 'K');
  95   1                      lcd_20x4Position(4, 0);
  96   1                      print_lcd("SMS TEST OK .....");
  97   1                      delay_ms(100);
  98   1                      
  99   1                      lcd_20x4Position(4, 0);
 100   1                      print_lcd("LOADING INBOX.....");
 101   1                      delay_ms(500);
 102   1      
 103   1                      transmit_UARTDataString("AT+CMGD=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 104   1                      while(receive_UARTDataByte() != 'O');
 105   1                      while(receive_UARTDataByte() != 'K');
 106   1                      transmit_UARTDataString("AT+CMGD=2");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 107   1                      while(receive_UARTDataByte() != 'O');
 108   1                      while(receive_UARTDataByte() != 'K');
 109   1                      transmit_UARTDataString("AT+CMGD=3");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 110   1                      while(receive_UARTDataByte() != 'O');
 111   1                      while(receive_UARTDataByte() != 'K');
 112   1                      transmit_UARTDataString("AT+CMGD=4");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 113   1                      while(receive_UARTDataByte() != 'O');
 114   1                      while(receive_UARTDataByte() != 'K');
 115   1                      transmit_UARTDataString("AT+CMGD=5");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 116   1                      while(receive_UARTDataByte() != 'O');
C51 COMPILER V9.02   MAIN                                                                  03/01/2017 15:21:12 PAGE 3   

 117   1                      while(receive_UARTDataByte() != 'K');
 118   1                      transmit_UARTDataString("AT+CMGD=6");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 119   1                      while(receive_UARTDataByte() != 'O');
 120   1                      while(receive_UARTDataByte() != 'K');
 121   1                      transmit_UARTDataString("AT+CMGD=7");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 122   1                      while(receive_UARTDataByte() != 'O');
 123   1                      while(receive_UARTDataByte() != 'K');
 124   1                      transmit_UARTDataString("AT+CMGD=8");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 125   1                      while(receive_UARTDataByte() != 'O');
 126   1                      while(receive_UARTDataByte() != 'K');
 127   1                      transmit_UARTDataString("AT+CMGD=9");  delay_ms(50);    transmit_UARTDataByte(0X0D);
 128   1                      while(receive_UARTDataByte() != 'O');
 129   1                      while(receive_UARTDataByte() != 'K');
 130   1                      transmit_UARTDataString("AT+CMGD=10");  delay_ms(50);   transmit_UARTDataByte(0X0D);
 131   1                      while(receive_UARTDataByte() != 'O');
 132   1                      while(receive_UARTDataByte() != 'K');
 133   1      
 134   1                      
 135   1                      
 136   1                      lcd_20x4Position(4, 0);
 137   1                      print_lcd("SMS INBOX CLEAN....");
 138   1                      delay_ms(1000);
 139   1      
 140   1                      lcd_20x4Position(4, 0);
 141   1                      print_lcd("SEND NOTICE        ");
 142   1                      delay_ms(1000);
 143   1      
 144   1      
 145   1                      transmit_UARTDataString("AT+CMGR=1");  delay_ms(50);    transmit_UARTDataByte(0X0D);  delay_ms(50);
 146   1      
 147   1                                      
 148   1              lcd_clear();
 149   1                      print_lcd("LOADING INBOX.....");
 150   1                       
 151   1                      while(1)
 152   1                      {
 153   2                              while(RI !=0) RI =0; count =0; sms_byte =0;      sms_status =0;
 154   2      
 155   2                              while(1)
 156   2                              {
 157   3      
 158   3                                      if(RI == 1 && count == 14)
 159   3                                      {
 160   4                                              
 161   4                                              sms_status = receive_UARTDataByte();
 162   4                                              
 163   4                                                      count =0;break;
 164   4                                      }
 165   3                                      else if(RI == 1)
 166   3                                      {
 167   4                                         receive_UARTDataByte();
 168   4                                         count++;
 169   4                                      }
 170   3      
 171   3                                      if(count > 15)
 172   3                                      {
 173   4                                       count =0; break;
 174   4                                      }
 175   3                      
 176   3                              }
 177   2              
 178   2                      lcd_clear();    count =0;
C51 COMPILER V9.02   MAIN                                                                  03/01/2017 15:21:12 PAGE 4   

 179   2      //              putc_lcd(sms_status);
 180   2      //              delay_ms(1000);
 181   2              
 182   2                      while(RI !=0) RI =0;
 183   2      
 184   2                              transmit_UARTDataString("AT+CMGR="); transmit_UARTDataByte(sms_status); delay_ms(50);   transmit_UARTData
             -Byte(0X0D);  delay_ms(50);
 185   2                              while(1)
 186   2                              {
 187   3                                      while(RI ==0);
 188   3                                      if(RI == 1 && count > 64)
 189   3                                      {
 190   4                                              sms_byte = receive_UARTDataByte();
 191   4                                              sms_data[i] = sms_byte;
 192   4      
 193   4                                              if (sms_byte == '&') break;
 194   4      
 195   4                                               i++;  count++;
 196   4      
 197   4                                      }
 198   3                                      else if(RI == 1)
 199   3                                      {
 200   4                                         receive_UARTDataByte();
 201   4                                         count++;
 202   4                                      }
 203   3      
 204   3                                      if(count > 144)
 205   3                                      {
 206   4                                              count =0;
 207   4                                               break; 
 208   4                                      }
 209   3                                      
 210   3                              
 211   3                      
 212   3                               }
 213   2      
 214   2                              lcd_clear();
 215   2                              sms_data[i] = '\0';
 216   2                              print_lcd(sms_data);
 217   2                              count =0; i =0;
 218   2      
 219   2                              transmit_UARTDataString("AT+CMGD="); transmit_UARTDataByte(sms_status); delay_ms(50); 
 220   2                              transmit_UARTDataByte(0X0D);
 221   2                              while(receive_UARTDataByte() != 'O');
 222   2                              while(receive_UARTDataByte() != 'K');
 223   2      
 224   2                      }
 225   1              
 226   1              
 227   1      
 228   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1123    ----
   CONSTANT SIZE    =    580    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      84
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.02   MAIN                                                                  03/01/2017 15:21:12 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
